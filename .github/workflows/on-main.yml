on:
  push:
    branches:
      - main

name: Main

jobs:
  test:
    uses: ./.github/workflows/wf-test.yml
  version:
    runs-on: ubuntu-latest
    needs: test
    outputs:
      version: ${{ steps.generate-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Version
        id: generate-version
        run: |
          MAJOR="0"
          MINOR="0"
          PATCH="$(git rev-list --count HEAD)"

          VERSION="${MAJOR}.${MINOR}.${PATCH}"
          echo "Version is $VERSION"

          echo "version=v$VERSION" >> "$GITHUB_OUTPUT"
  build:
    runs-on: ubuntu-latest
    needs: version
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Golang
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.5
      - name: Build Artifacts
        env:
          VERSION: ${{ needs.version.outputs.version }}
        run: |
          GOOS=darwin GOARCH=amd64 go build -o output/grab-darwin-amd64 -ldflags="-X 'github.com/noizwaves/grab/cmd.version=$VERSION'" main.go &&
          GOOS=darwin GOARCH=arm64 go build -o output/grab-darwin-arm64 -ldflags="-X 'github.com/noizwaves/grab/cmd.version=$VERSION'" main.go &&
          GOOS=linux  GOARCH=amd64 go build -o output/grab-linux-amd64 -ldflags="-X 'github.com/noizwaves/grab/cmd.version=$VERSION'" main.go &&
          GOOS=linux  GOARCH=arm64 go build -o output/grab-linux-arm64 -ldflags="-X 'github.com/noizwaves/grab/cmd.version=$VERSION'" main.go
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: |
            output/grab-darwin-amd64
            output/grab-darwin-arm64
            output/grab-linux-amd64
            output/grab-linux-arm64

  release:
    runs-on: ubuntu-latest
    needs: [build, version]
    permissions:
      contents: write
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: output
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create ${{ needs.version.outputs.version }} --repo ${GITHUB_REPOSITORY} --generate-notes --target ${GITHUB_SHA} --prerelease output/*
